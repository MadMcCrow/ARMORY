#!/usr/bin/env python
# SCsub
#
# Copyright © Noé Perard-Gayot 2021.                                                                                        #
# Licensed under the MIT License. You may obtain a copy of the License at https://opensource.org/licenses/mit-license.php   #
#
import os

# Scons import
Import("env")
Import("env_modules")

# folders for headers and sources
src_folder = 'src'
inc_folder = 'inc'
module_name = 'armory_gui'
module_shared_name = 'module_armory_gui_shared'

# Build it all as a library for other modules
env.module_armory_gui_sources = []
lib = env.add_library(module_name, env.module_armory_gui_sources)
env.Prepend(LIBS=[lib])

# add our sources to the build environment
module_env = env_modules.Clone()

# get all source files
sources = [os.path.join(p, n) for p, s, f in os.walk(src_folder) for n in f if n.endswith('cpp')]
sources += ["register_types.cpp"]

module_is_shared_lib = ARGUMENTS.get(module_shared_name, 'no') == "yes"

#
# Cpp flags
#
if env["platform"] == "windows" :
    cxx_flags = ['/std:c++17', '/Zc:alignedNew']
    cc_flags  = ['/O2'] + ["-EHsc", "-MD"]
else :
    # godot is not yet fully compatible with '-std=c++20' so we stay at 17 with padded
    cxx_flags =  ['-std=c++17', '-Wpadded']
    # Position Independent Code , requiered for unix shared libs
    cc_flags  = ['-O3', '-fPIC'] if module_is_shared_lib else ['-O3', '-static']

#dict = module_env.ParseFlags('-openmp')
module_env['LIBS'] = []  # Don't inject Godot's dependencies into our shared library.
module_env.Append(CPPPATH=[inc_folder]) # pass flags for compiler
module_env.Append(CXXFLAGS=cxx_flags)
module_env.Append(CCFLAGS=cc_flags)

if False :#module_is_shared_lib :
    # Define the shared library. By default, it would be built in the module's
    # folder, however it's better to output it into `bin` next to the
    # Godot binary.
    shared_lib = module_env.SharedLibrary(target='#bin/'+ module_name, source=sources)
    shared_lib_shim = shared_lib[0].name.rsplit('.', 1)[0]
    # Finally, notify the main build environment it now has our shared library
    # as a new dependency.
    # LIBPATH and LIBS need to be set on the real "env" (not the clone)
    # to link the specified libraries to the Godot executable.
    env.Append(LIBPATH=['#bin'])
    # SCons wants the name of the library with it custom suffixes
    # (e.g. ".x11.tools.64") but without the final ".so".
    shared_lib_shim = shared_lib[0].name.rsplit('.', 1)[0]
    env.Append(LIBS=[shared_lib_shim])
else :
    # Static compilation
    # reference our headers in 'inc'
    # add sources to build here
    module_env.add_source_files(env.modules_sources, sources)
